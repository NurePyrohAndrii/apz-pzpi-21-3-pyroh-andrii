1 ОПИС АРХІТЕКТУРИ СИСТЕМИ

Серверна частина додатку розроблена на мові програмування Java за допомогою фреймворку Spring Boot фреймворку версії 3.2. Як СУБД було обрано PostgreSQL 14 версії. Для зв’язку серверного застосунку з базою даних було використано Spring Data JPA, який є частиною фреймворку для роботи з даними Spring Data. 
Для валідації вхідних даних було використано Java Bean Validation API, який є частиною Spring Framework. Для впровадження захисту даних користувачів використано Spring Security. Версії усіх перечислених компонентів наслідуються від версії Spring Boot фреймворку.
Сам серверний застосунок представляє з себе монолітний за архітектурою проект. Структура проекту відповідає модульному підходу, який, як правило, вважається гарною практикою для підтримки та масштабування монолітних проетів. Проект організовано у пакети на основі компонентів системи (рис. 2.1), таких як common, controller, domain, security, user. 
Кожен з цих пакетів має в собі відповідні підпакети, які створені для розподілення та групування класів відповідних певному слою програми або компоненту системи, що допомагає тримати споріднені класи разом, що полегшує їх пошук і підтримку. 
Файли типу Controller відповідають за обробку запитів на певні URL-адреси, обробку даних з форм та взаємодію з відповідними сервісами для виконання запиту користувача. Сервіси інкапсулюють бізнес-логіку додатку та обробку даних. Репозиторії відповідають за управління збереженням та вилученням даних із бази даних. 
Request та Response є DTO класами, які призначені для зберігання даних, надісланих клієнтом та для структурування даних відповіді серверу відповідно. Mapper класи керують перетворенням даних, він конвертує дані з сутностей (що використовуються базою даних) в DTO.

2 ПОБУДОВА ДІАГРАМИ РОЗГОРТАННЯ

Було розроблено діаграму розгортання для додатку (рис. 2.3). Програма розгортається влаштованим Apache Tomcat контейнером сервлетів всередині серверу, а база даних у власному сервері. 
Фронтенд розгортається на nginx сервері, а андроїд застосунок розгортається за допомогою Android Runtime (ART). Усі компоненти взаємодіють за допомогою TCP протоколу на транспортному рівні, а на прикладному рівні за допомогою HTTP.

3 ОПИС АРХІТЕКТУРИ СЕРВЕРНОЇ ЧАСТИНИ

Точкою запуску програми є файл VitisVisionApplication.java, код якого наведено в додатку Б.1.Захист системи налаштований у конфігураційному файлі SecurityConfig.java, код якого наведено в додатку Б.2. 
В ньому визначаються правила захисту посилань запитів, визначені які треба захистити аутентифікацією та авторизацією, а які ні. Також конфігуруються посилання та оброблювач виходу із системи та фільтр який буде перехоплювати запити і встановлювати доступ до системи. 
Сам фільтр JwtAuthenticationFilter в одноіменному файлі з розширенням .java, код якого можна знайти в додатку Б.3, перевіряє наявність jwt токену та його валідність за часом і підписом за допомогою методів JwtService.java, код якого  можна знайти в додатку Б.4, 
і заносить користувача в SecurityContext тим самим дозволяє користувачу користуватися системою. Також в системі є глобальний обробник виключних ситуацій, знаходиться в файлі GlobalAdvisor.java в додатку Б.5, який перехоплює та обробляє усі виключення, 
які можуть виникнути під час роботи програми. Під час виключної ситуації, її обробляють та формують відповідь користувачу про те, що було причиною.  Для цього у виді відповіді виступає ApiError.java, його код у додатку Б.6, який і є структурою оформлення подібних «виключних» відповідей. 
Помилка, наприклад, може виникнути через невірні вхідні данні від користувача, тоді валідатори цих даних і повідомляють про це у вигляді ApiError.

4 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Для візуального представлення взаємодії між користувачами і системою була розроблена Use Case діаграма (рис. 2.5). У системі є 5 акторів: користувач, працівник, менеджер, директор та адміністратор. 
Директор винограднику має доступ до усіх функцій системи, окрім тих що пов'язані з загальним адмініструванням в додатку. Менеджер має повноважень меньше ніж директор, йому дозволено все, окрім найму, звільнення та перепризначення працівників на винограднику. 
Працівнику винограднику дозволено керувати лозами та пристроями, але, на відміну від менеджера, не дозволено керувати блоками, групами. Користувач має можливість керувати власним профілем та створити власний виноградник. Адміністратор цповноважений 
видаляти та блокувати користувачів, а також створювати резервні копії бази даних.

5 ПОБУДОВА ER-ДІАГРАМИ

Для візуального представлення взаємодії між користувачами і системою була розроблена Use Case діаграма (рис. 2.5). На діаграмі зображено сутності Користувач, Виноградник, Роль, Блок, Група, Лоза, Пристрій, Дані пристрою, Адреса та зв’язки між ними. 
Загалом присутні 5 зв’язків один-до-багатьох (Виноградник – Група, Виноградник – Блок, Блок – Лоза, Користувач – Виноградник, Пристрій – Дані пристрою), 2 зв’язки один-до-одного (Лоза – Пристрій, Виноградник – Адреса) та 2 зв’язоки багато-до-багатьох (Користувач – Роль, Група - Лоза), 
що при створенні бази даних будуть реалізовані за допомогою проміжної таблиці та зв’язками один-до-багатьох.

6 СПЕЦИФІКАЦІЯ REST 

Посилання	Метод	Опис методу
/api/v1/vineyards/{vineyardId}	GET	Отримання даних винограднику за ID
/api/v1/vineyards/{vineyardId}	PUT	Оновлення даних винограднику за ID
/api/v1/vineyards/{vineyardId}	DELETE	Видалення винограднику за ID
/api/v1/vineyards/{vineyardId}/staff	GET	Отримання персоналу винограднику
/api/v1/vineyards/{vineyardId}/staff	PUT	Оновлення даних персоналу в винограднику
/api/v1/vineyards/{vineyardId}/staff	POST	Додавання персоналу в виноградник
/api/v1/vineyards/{vineyardId}/staff	DELETE	Звільнення персоналу з виноградника
/api/v1/vineyards/{vineyardId}/groups/{groupId}	GET	Отримання групи у винограднику
/api/v1/vineyards/{vineyardId}/groups/{groupId}	PUT	Оновлення групи у винограднику
/api/v1/vineyards/{vineyardId}/groups/{groupId}	DELETE	Видалення групи у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}	GET	Отримання блоку у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}	PUT	Оновлення блоку у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}	DELETE	Видалення блоку у винограднику
/api/v1/vines/{vineId}/devices/{deviceId}	PUT	Оновлення деталей пристрою в винограднику
/api/v1/vines/{vineId}/devices/{deviceId}	DELETE	Видалення пристрою за ID
/api/v1/users	GET	Отримання всіх користувачів
/api/v1/users	PUT	Оновлення деталей користувача
/api/v1/users	DELETE	Видалення користувача
/api/v1/users	PATCH	Зміна пароля автентифікованого користувача
/api/v1/blocks/{blockId}/vines/{vineId}	GET	Отримання деталей винограду в блоку
/api/v1/blocks/{blockId}/vines/{vineId}	PUT	Оновлення деталей винограду в блоку
/api/v1/blocks/{blockId}/vines/{vineId}	DELETE	Видалення винограду в блоку
/api/v1/vineyards	GET	Отримання списку всіх виноградників
/api/v1/vineyards	POST	Створення нового виноградника
/api/v1/vineyards/{vineyardId}/groups	GET	Отримання всіх груп у винограднику
/api/v1/vineyards/{vineyardId}/groups	POST	Створення групи у винограднику
/api/v1/vineyards/{vineyardId}/groups/{groupId}/vines	GET	Отримання всіх виноградів у групі
/api/v1/vineyards/{vineyardId}/groups/{groupId}/vines	POST	Додавання виноградів до групи
/api/v1/vineyards/{vineyardId}/groups/{groupId}/vines	DELETE	Видалення виноградів з групи
/api/v1/vineyards/{vineyardId}/blocks	GET	Отримання всіх блоків у винограднику
/api/v1/vineyards/{vineyardId}/blocks	POST	Створення нового блоку у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}/_report	POST	Генерація звіту для блоку у винограднику
/api/v1/vines/{vineId}/devices	GET	Отримання деталей пристрою за ID
/api/v1/vines/{vineId}/devices	POST	Створення нового пристрою в винограді
/api/v1/vines/{vineId}/devices/{deviceId}/deactivate	POST	Деактивація пристрою
/api/v1/vines/{vineId}/devices/{deviceId}/activate/{frequency}	POST	Активація пристрою з вказаною частотою
/api/v1/users/unblock	POST	Розблокування користувача
/api/v1/users/block	POST	Блокування користувача
/api/v1/db-backups	GET	Отримання списку доступних бекапів
/api/v1/db-backups	POST	Створення бекапу бази даних
/api/v1/blocks/{blockId}/vines	GET	Отримання всіх виноградів у блоку
/api/v1/blocks/{blockId}/vines	POST	Створення нового винограду у блоку
/api/v1/auth/register	POST	Реєстрація нового користувача
/api/v1/auth/refresh	POST	Оновлення access токена
/api/v1/auth/authenticate	POST	Аутентифікація користувача
/api/v1/vineyards/{vineyardId}/groups/{groupId}/_vines_to_assign	GET	Отримання виноградів, що можна призначити групі
/api/v1/users/{id}	GET	Отримання деталей користувача за ID
/api/v1/users/me	GET	Отримання деталей поточного автентифікованого користувача
/api/v1/users/{userId}	DELETE	Видалення користувача за ID

7 ПОБУДОВА ДІАГРАМИ ПАКЕТІВ

Для відображення структури та організації програмної системи було розроблено Package Diagram (рис. 2.6). Діаграма показує залежності поміж пакетами та як вони використовують одне одного для виконання своїх задач. На ній зображені 8 пакетів: Staff, Vineyard, Block, Group, Vine, Device, Security, User.

ВИСНОВКИ

Під час виконання лабораторної роботи було створено серверну частину програмної системи для контролю за виноградниками "Vitis Vision Service".

ДОДАТОК А
Специфікація REST
Посилання	Метод	Опис методу
/api/v1/vineyards/{vineyardId}	GET	Отримання даних винограднику за ID
/api/v1/vineyards/{vineyardId}	PUT	Оновлення даних винограднику за ID
/api/v1/vineyards/{vineyardId}	DELETE	Видалення винограднику за ID
/api/v1/vineyards/{vineyardId}/staff	GET	Отримання персоналу винограднику
/api/v1/vineyards/{vineyardId}/staff	PUT	Оновлення даних персоналу в винограднику
/api/v1/vineyards/{vineyardId}/staff	POST	Додавання персоналу в виноградник
/api/v1/vineyards/{vineyardId}/staff	DELETE	Звільнення персоналу з виноградника
/api/v1/vineyards/{vineyardId}/groups/{groupId}	GET	Отримання групи у винограднику
/api/v1/vineyards/{vineyardId}/groups/{groupId}	PUT	Оновлення групи у винограднику
/api/v1/vineyards/{vineyardId}/groups/{groupId}	DELETE	Видалення групи у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}	GET	Отримання блоку у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}	PUT	Оновлення блоку у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}	DELETE	Видалення блоку у винограднику
/api/v1/vines/{vineId}/devices/{deviceId}	PUT	Оновлення деталей пристрою в винограднику
/api/v1/vines/{vineId}/devices/{deviceId}	DELETE	Видалення пристрою за ID
/api/v1/users	GET	Отримання всіх користувачів
/api/v1/users	PUT	Оновлення деталей користувача
/api/v1/users	DELETE	Видалення користувача
/api/v1/users	PATCH	Зміна пароля автентифікованого користувача
/api/v1/blocks/{blockId}/vines/{vineId}	GET	Отримання деталей винограду в блоку
/api/v1/blocks/{blockId}/vines/{vineId}	PUT	Оновлення деталей винограду в блоку
/api/v1/blocks/{blockId}/vines/{vineId}	DELETE	Видалення винограду в блоку
/api/v1/vineyards	GET	Отримання списку всіх виноградників
/api/v1/vineyards	POST	Створення нового виноградника
/api/v1/vineyards/{vineyardId}/groups	GET	Отримання всіх груп у винограднику
/api/v1/vineyards/{vineyardId}/groups	POST	Створення групи у винограднику
/api/v1/vineyards/{vineyardId}/groups/{groupId}/vines	GET	Отримання всіх виноградів у групі
/api/v1/vineyards/{vineyardId}/groups/{groupId}/vines	POST	Додавання виноградів до групи
/api/v1/vineyards/{vineyardId}/groups/{groupId}/vines	DELETE	Видалення виноградів з групи
/api/v1/vineyards/{vineyardId}/blocks	GET	Отримання всіх блоків у винограднику
/api/v1/vineyards/{vineyardId}/blocks	POST	Створення нового блоку у винограднику
/api/v1/vineyards/{vineyardId}/blocks/{blockId}/_report	POST	Генерація звіту для блоку у винограднику
/api/v1/vines/{vineId}/devices	GET	Отримання деталей пристрою за ID
/api/v1/vines/{vineId}/devices	POST	Створення нового пристрою в винограді
/api/v1/vines/{vineId}/devices/{deviceId}/deactivate	POST	Деактивація пристрою
/api/v1/vines/{vineId}/devices/{deviceId}/activate/{frequency}	POST	Активація пристрою з вказаною частотою
/api/v1/users/unblock	POST	Розблокування користувача
/api/v1/users/block	POST	Блокування користувача
/api/v1/db-backups	GET	Отримання списку доступних бекапів
/api/v1/db-backups	POST	Створення бекапу бази даних
/api/v1/blocks/{blockId}/vines	GET	Отримання всіх виноградів у блоку
/api/v1/blocks/{blockId}/vines	POST	Створення нового винограду у блоку
/api/v1/auth/register	POST	Реєстрація нового користувача
/api/v1/auth/refresh	POST	Оновлення access токена
/api/v1/auth/authenticate	POST	Аутентифікація користувача
/api/v1/vineyards/{vineyardId}/groups/{groupId}/_vines_to_assign	GET	Отримання виноградів, що можна призначити групі
/api/v1/users/{id}	GET	Отримання деталей користувача за ID
/api/v1/users/me	GET	Отримання деталей поточного автентифікованого користувача
/api/v1/users/{userId}	DELETE	Видалення користувача за ID